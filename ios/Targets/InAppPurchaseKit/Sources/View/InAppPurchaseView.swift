//
//  InAppPurchaseView.swift
//  InAppPurchaseKit (Generated by SwiftyLaunch 2.0)
//  https://docs.swiftylaun.ch/module/inapppurchasekit/paywall
//

import AnalyticsKit
import RevenueCat
import RevenueCatUI
import SharedKit
import SwiftUI

/// Shown by .requirePremium() when a user does not have a premium subscription.
public struct InAppPurchaseView: View {

	let paywallHeroTitle: LocalizedStringKey
	let onCanceled: (() -> Void)?
	let onComplete: (() -> Void)

	public init(
		paywallHeroTitle: LocalizedStringKey = "Get Full Access.", onCanceled: (() -> Void)? = nil,
		onComplete: @escaping () -> Void
	) {
		self.paywallHeroTitle = paywallHeroTitle
		self.onCanceled = onCanceled
		self.onComplete = onComplete
	}

	/// Called by RevenueCat once the user presses on the Purchase Button
	func onPurchaseCompleted(_ customerInfo: CustomerInfo) {
		if InAppPurchases.extractSubscriptionStatus(customerInfo) == .subscribed {
			showInAppNotification(
				content: .init(title: "Premium Features Unlocked", message: "Thanks for your purchase!"),
				style: .init(sfSymbol: "star.fill", symbolColor: .indigo, size: .compact)
			)
			onComplete()
		} else {
			print("User did not purchase.")
		}
	}

	public var body: some View {

		// Show as scrollable on ipad (otherwise looks bad when shown in a sheet)
		Group {
			if currentPlatform == .pad {
				ScrollView {
					InAppPurchaseCarousel(heroTitle: paywallHeroTitle)
						.frame(minHeight: 450)
						.paywallFooter(purchaseCompleted: onPurchaseCompleted)
				}
				.ignoresSafeArea(.container, edges: .top)
			} else {
				InAppPurchaseCarousel(heroTitle: paywallHeroTitle)
					.paywallFooter(purchaseCompleted: onPurchaseCompleted)
			}
		}
		// hide the bottom tab bar
		.toolbar(.hidden, for: .tabBar)
		// hide navigation bar (we'll replace the cancel button with our custom button)
		.toolbar(.hidden, for: .navigationBar)
		.captureViewActivity(as: "InAppPurchaseView")
		.overlay(alignment: .topLeading) {
			if let onCanceled {
				Button("Cancel", action: onCanceled)
					.padding()
					.hoverEffect()
					.captureTaps("dismiss_view_btn", fromView: "InAppPurchaseView")
			}
		}

	}

	private struct InAppPurchaseCarousel: View {

		let heroTitle: LocalizedStringKey
		@State private var page = 0
		private let timer = Timer.publish(every: 5, on: .main, in: .common).autoconnect()

		var body: some View {
			TabView(selection: $page) {
				PaywallHeroView(title: heroTitle)
					.tag(0)

				PaywallSecondView()
					.tag(1)

				HeroView(
					sfSymbolName: "theatermask.and.paintbrush.fill",
					title: "Paywall Page 2",
					subtitle: "The HeroView also looks awesome here.",
					size: .small
				)
				.tag(2)
			}
			.accentBackground(strong: true)
			// don't show the page dots
			.tabViewStyle(.page(indexDisplayMode: .never))

			// scroll the page once the timer fires
			// if we are on page 2 -> go to bage 0 again
			.onReceive(timer) { time in
				if page == 2 {
					withAnimation {
						page = 0
					}
				} else {
					withAnimation {
						page += 1
					}
				}
			}
		}
	}

	private struct PaywallHeroView: View {
		let title: LocalizedStringKey

		var body: some View {
			VStack {
				VideoPlayerAlphaView(
					url: Bundle.module.url(forResource: "paywall-hero-vid", withExtension: "mov")!,
					keepsAspectRatio: true
				)
				.padding(.bottom, -25)

				HStack {
					VStack(alignment: .leading) {
						Text(title)
							.font(.title)
							.fontWeight(.bold)
							.foregroundStyle(Color.accent)
							.lineLimit(1)
							.minimumScaleFactor(0.01)

						Text("Unlock Everything our App has to offer.")
							.fontWeight(.semibold)
							.foregroundStyle(.secondary)
					}

					Spacer()
				}
				.padding(.horizontal)
			}
			.ignoresSafeArea(.container, edges: .top)
		}
	}

	private struct PaywallSecondView: View {
		var body: some View {
			VStack {
				Spacer()
				Image(systemName: "scribble.variable")
					.font(.system(size: 125, weight: .semibold))
					.foregroundStyle(Color.accent.gradient)

				Spacer()  // just to make it a bit more visually centered

				HStack {
					VStack(alignment: .leading) {
						Text("Killer Feature 1")
							.font(.title)
							.fontWeight(.bold)
							.foregroundStyle(Color.accent)
						Text("This Feature rocks.")
							.fontWeight(.semibold)
							.foregroundStyle(.secondary)

					}
					Spacer()
				}
				.padding(.horizontal)
			}
			.frame(maxWidth: .infinity, maxHeight: .infinity)
			// Another way to display the feature title
			.overlay {
				//            HStack {
				//                VStack(alignment: .leading) {
				//                    Spacer()
				//                    Text("Killer Feature 1")
				//                        .font(.title)
				//                        .fontWeight(.bold)
				//                        .foregroundStyle(Color.accent)
				//                    Text("This Feature rocks.")
				//                        .fontWeight(.semibold)
				//                        .foregroundStyle(.secondary)
				//
				//                }
				//                Spacer()
				//            }
				//            .padding(.horizontal)
				//            .frame(width: UIScreen.main.bounds.size.width)
			}
		}
	}
}

#Preview {
	Color.gray
		.sheet(isPresented: .constant(true)) {
			InAppPurchaseView(onComplete: {})
		}
}
