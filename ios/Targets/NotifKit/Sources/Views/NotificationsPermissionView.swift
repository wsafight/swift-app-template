//
//  NotificationsPermissionView.swift
//  NotifKit (Generated by SwiftyLaunch 2.0)
//  https://docs.swiftylaun.ch/module/notifkit#view--notificationspermissionviewswift
//

import SharedKit
import SwiftUI

struct NotificationsPermissionView: View {

	@Environment(\.scenePhase) var scenePhase

	let onDismiss: (() -> Void)?

	init(onDismiss: (() -> Void)? = nil) {
		self.onDismiss = onDismiss
	}

	var body: some View {
		VStack {

			Spacer()

			HeroView(
				sfSymbolName: "bell.badge.fill",
				title: "Allow Notifications",
				subtitle: "Get notified when something important happens",
				bounceOnAppear: true
			)
			.padding()

			Spacer()

			Text(
				.init(
					"By pressing \"Allow\" you consent to our [ToS](\(Constants.AppData.termsOfServiceURL)) and [Privacy Policy](\(Constants.AppData.privacyPolicyURL))."
				)
			)  // need .init for markdown links to work
			.foregroundStyle(.secondary)
			.font(.caption)
			.lineLimit(1)
			.minimumScaleFactor(0.1)

			Button("Allow \(PushNotifications.canAskForNotificationsPermission() ? "Notifications" : "in Settings")")
			{
				Task {
					await PushNotifications.askSystemPermission()
				}
			}
			.buttonStyle(.cta())

			if let onDismiss = onDismiss {
				Button("Dismiss") {
					onDismiss()
				}
				.buttonStyle(.secondary())
			}

		}
		.padding()
		.accentBackground(strong: true)
		.onAppearAndChange(of: scenePhase) {  // Maybe the user has changed the notifications settings in the settings app and came back
			Task {
				// if we have access, we tell the parent view to dismiss
				if await PushNotifications.hasNotificationsPermission() {
					if let onDismiss {
						onDismiss()
					}
				}
			}
		}

	}
}

#Preview {
	NotificationsPermissionView()
}
