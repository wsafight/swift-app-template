//
//  requireNetwork.swift
//  App (Generated by SwiftyLaunch 2.0)
//  https://docs.swiftylaun.ch/module/sharedkit/require-network-access
//

import Combine
import Network
import SwiftUI

extension View {
	public func requireNetwork() -> some View {
		modifier(RequireInternet())
	}
}

private struct RequireInternet: ViewModifier {

	@StateObject var nwMonitor = NetworkMonitor()

	func body(content: Content) -> some View {
		Group {
			if nwMonitor.isConnected {
				content
					.transition(.blurReplace)
			} else {
				ContentUnavailableView(
					"No Internet Access", systemImage: "wifi.slash",
					description: Text("Connect to the internet and try again.")
				)
				.transition(.blurReplace)
			}
		}
	}
}

public class NetworkMonitor: ObservableObject {

	private let networkMonitor = NWPathMonitor()
	private let workerQueue = DispatchQueue(label: "Monitor")

	// Not @Published in order to avoid publishing changes from background threads
	@Published public internal(set) var isConnected = true

	public init() {
		networkMonitor.pathUpdateHandler = { path in
			Task { @MainActor in
				withAnimation {
					self.isConnected = path.status == .satisfied
				}
			}
		}
		networkMonitor.start(queue: workerQueue)
	}
}
