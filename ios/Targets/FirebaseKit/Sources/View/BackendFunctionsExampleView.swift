//
//  BackendFunctionsExampleView.swift
//  BackendKit (Generated by SwiftyLaunch 2.0)
//  https://docs.swiftylaun.ch/module/backendkit
//

import SwiftUI

struct BackendFunctionsExampleView: View {

	@EnvironmentObject var db: DB
	@State private var users: [FetchedUser] = []

	init() {}

	var body: some View {
		VStack {
			if users.isEmpty {
				Button("Fetch Users") {
					Task {
						users = await db.fetchAllBackendUsers()
					}
				}
			} else {
				List {
					ForEach(users, id: \.userID) { user in
						Section(footer: Text("User ID: \(user.userID)")) {
							HStack {
								Text(user.username)
									.fontWeight(.semibold)
								Spacer()
								if user.userID == db.currentUser?.uid {
									Text("YOU")
										.fontWeight(.bold)
										.padding(.vertical, 2.5)
										.padding(.horizontal, 5)
										.background(Color.accent.gradient)
										.foregroundStyle(.white)
										.clipShape(
											RoundedRectangle(
												cornerRadius: 7.5,
												style: .continuous))
								}
							}
							Text("Posts Created")
								.badge("\(user.postsCreated)")

							Text("Premium Status")
								.badge(user.userHasPremium ? "Has Premium, yay!" : "No Premium")

							SendNotificationButton(userID: user.userID)
						}
					}
				}
				.refreshable {
					users = await db.fetchAllBackendUsers()
				}
			}
		}
		.navigationTitle("All Users (From Backend)")
		.onAppear {
			Task {
				users = await db.fetchAllBackendUsers()
			}
		}

	}
}

struct SendNotificationButton: View {

	@EnvironmentObject var db: DB
	@State var showMessageInputAlert = false

	@State var notifMessage = "Hello there!"

	let userID: String

	var body: some View {
		Button(
			action: {
				showMessageInputAlert = true
			},
			label: {
				Label(
					title: { Text("Send Notification") },
					icon: { Image(systemName: "bell.fill") }
				)
			}
		)
		.alert("Enter your Message", isPresented: $showMessageInputAlert) {
			TextField("Your Message", text: $notifMessage)
			Button("OK") {
				Task {
					await db.executeIfSignedIn(otherwise: .showInAppNotification) {
						await db.sendNotificationTo(userID: userID, message: notifMessage)
					}
				}
			}
			.disabled(notifMessage.isEmpty)

			Button("Cancel", role: .cancel) {
				notifMessage = "Hello there!"
			}
			.buttonStyle(.borderless)
		}

	}
}
